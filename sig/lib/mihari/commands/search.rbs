module Mihari
  module Commands
    module Search
      include Mixins::Rule

      def self.included: (untyped thor) -> untyped

      private

      #
      # Build a rule analyzer
      #
      # @param [String] title
      # @param [String] description
      # @param [Array<Hash>] queries
      # @param [Array<String>, nil] tags
      # @param [Array<String>, nil] allowed_data_types
      # @param [Array<String>, nil] disallowed_data_values
      # @param [String, nil] source
      #
      # @return [Mihari::Analyzers::Rule]
      #
      def build_rule_analyzer: (title: String title, description: String description, queries: Array[Hash[(String | Symbol), untyped]] queries, ?tags: Array[String]? tags, ?allowed_data_types: Array[String]? allowed_data_types, ?disallowed_data_values: Array[String]? disallowed_data_values, ?source: String? source, ?id: String? id) -> Mihari::Analyzers::Rule

      #
      # Run rule analyzer
      #
      # @param [Mihari::Analyzer::Rule] analyzer
      #
      # @return [nil]
      #
      def run_rule_analyzer: (Mihari::Analyzers::Rule analyzer, ?ignore_old_artifacts: bool ignore_old_artifacts, ?ignore_threshold: ::Integer ignore_threshold) -> untyped
    end
  end
end
