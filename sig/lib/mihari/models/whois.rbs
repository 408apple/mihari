module Mihari
  class WhoisRecord < ActiveRecord::Base
    attr_accessor domain (): String
    attr_accessor created_on (): DateTime?
    attr_accessor updated_on (): DateTime?
    attr_accessor expires_on (): DateTime?
    attr_accessor registrar (): Hash[(String | Symbol), untyped]
    attr_accessor contacts (): Array[Hash[(String | Symbol), untyped]]

    #
    # Build whois record
    #
    # @param [Stinrg] domain
    #
    # @return [WhoisRecord, nil]
    #
    def self.build_by_domain: (String domain) -> Mihari::WhoisRecord?

    private

    #
    # Get created_on
    #
    # @param [::Whois::Parser:] parser
    #
    # @return [Date, nil]
    #
    def self.get_created_on: (untyped parser) -> Date?

    #
    # Get updated_on
    #
    # @param [::Whois::Parser:] parser
    #
    # @return [Date, nil]
    #
    def self.get_updated_on: (untyped parser) -> Date?

    #
    # Get expires_on
    #
    # @param [::Whois::Parser:] parser
    #
    # @return [Date, nil]
    #
    def self.get_expires_on: (untyped parser) -> Date?

    #
    # Get registrar
    #
    # @param [::Whois::Parser:] parser
    #
    # @return [Hash, nil]
    #
    def self.get_registrar: (untyped parser) -> Hash[(String | Symbol), untyped]?

    #
    # Get contacts
    #
    # @param [::Whois::Parser:] parser
    #
    # @return [Array[Hash[(String | Symbol), untyped]], nil]
    #
    def self.get_contacts: (untyped parser) -> Array[Hash[(String | Symbol), untyped]]?
  end
end
